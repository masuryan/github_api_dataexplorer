{"$schema":"https://dataexplorer.azure.com/static/d/schema/33/dashboard.json","id":"6f64781c-c511-456a-9e09-05b45aeb6adc","eTag":"JnTQ0aVYM8VYA725jrbHEQ==","schema_version":"33","title":"GitHub Analytics","autoRefresh":{"enabled":false},"sharedQueries":[],"tiles":[{"id":"80150abc-f2c2-48ed-aa51-e2767cd1de37","title":"Events by Type","visualType":"multistat","pageId":"e7ae717e-d60d-413c-b646-e5aced98afd7","layout":{"x":0,"y":0,"width":12,"height":6},"query":{"kind":"inline","usedVariables":["_endTime","_startTime"],"text":"EventsFromLiveStream\n| where CreatedAt between (_startTime .. _endTime)\n| where Type in (\"PushEvent\", \"WatchEvent\", \"IssuesEvent\")\n| summarize Events=count() by Type\n","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"colorRulesDisabled":false,"multiStat__textSize":"auto","multiStat__labelColumn":{"type":"infer"},"multiStat__valueColumn":{"type":"infer"},"multiStat__slot":{"width":4,"height":2},"hideTileTitle":false,"multiStat__displayOrientation":"horizontal","colorRules":[],"pie__TopNSlices":null}},{"id":"e57c4042-1bbb-4c6c-8de5-73b92eb6c5fd","title":"Watch Events by Repo","visualType":"bar","pageId":"e7ae717e-d60d-413c-b646-e5aced98afd7","layout":{"x":12,"y":0,"width":9,"height":6},"query":{"kind":"inline","usedVariables":["_endTime","_startTime"],"text":"EventsFromLiveStream\n| where CreatedAt between (_startTime .. _endTime)\n| where Type == \"WatchEvent\"\n| summarize WatchEvents=count() by RepoName = tolower(tostring(Repo.name))\n| top 5 by WatchEvents \n","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"hideLegend":false,"xColumnTitle":"","verticalLine":"","xAxisScale":"linear","crossFilterDisabled":true,"hideTileTitle":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"9cb807b1-d2aa-484a-bbb7-bb4d1b98793a","title":"Push Events by Repo","visualType":"bar","pageId":"e7ae717e-d60d-413c-b646-e5aced98afd7","layout":{"x":0,"y":6,"width":9,"height":7},"query":{"kind":"inline","usedVariables":["_endTime","_startTime"],"text":"EventsFromLiveStream\n| where CreatedAt between (_startTime .. _endTime)\n| where Type == \"PushEvent\"\n| summarize PushEvents=count() by RepoName = tolower(tostring(Repo.name))\n| top 5 by PushEvents \n","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"hideLegend":false,"xColumnTitle":"","verticalLine":"","xAxisScale":"linear","crossFilterDisabled":true,"hideTileTitle":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"9c389981-5f0b-4066-b4ee-163eae4990de","title":"Issue Events by Repo","visualType":"bar","pageId":"e7ae717e-d60d-413c-b646-e5aced98afd7","layout":{"x":9,"y":6,"width":9,"height":7},"query":{"kind":"inline","usedVariables":["_endTime","_startTime"],"text":"EventsFromLiveStream\n| where CreatedAt between (_startTime .. _endTime)\n| where Type == \"IssuesEvent\"\n| summarize IssuesEvents=count() by RepoName = tolower(tostring(Repo.name))\n| top 5 by IssuesEvents \n","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"hideLegend":false,"xColumnTitle":"","verticalLine":"","xAxisScale":"linear","crossFilterDisabled":true,"hideTileTitle":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"975defa0-2df7-4cd5-9e95-2e14483db5ed","title":"Most Popular Repos","visualType":"pie","pageId":"e7ae717e-d60d-413c-b646-e5aced98afd7","layout":{"x":18,"y":6,"width":6,"height":7},"query":{"kind":"inline","usedVariables":["_endTime","_startTime"],"text":"let watchedRepos =  \n    EventsFromLiveStream\n    | where CreatedAt between (_startTime .. _endTime)\n    | where Type == \"WatchEvent\"\n    | extend RepoName = tostring(Repo.name)\n    | summarize hint.shufflekey=RepoName WatchEvents=count() by RepoName;\nlet issuesRepos =  \n    EventsFromLiveStream\n    | where CreatedAt between (_startTime .. _endTime)\n    | where Type in (\"IssueCommentEvent\", \"IssuesEvent\")\n    | extend RepoName = tostring(Repo.name)\n    | summarize hint.shufflekey=RepoName IssueEvents=count() by RepoName;\nwatchedRepos\n| join hint.shufflekey=RepoName (issuesRepos) on RepoName\n| extend Popularity=(WatchEvents * 0.3) + (IssueEvents*0.7) \n| top 5 by Popularity \n| project RepoName, Popularity \n| render barchart","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"hideTileTitle":false,"hideLegend":false,"xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"crossFilterDisabled":false,"drillthroughDisabled":false,"labelDisabled":false,"pie__label":["name","percentage"],"tooltipDisabled":false,"pie__tooltip":["name","percentage","value"],"pie__orderBy":"size","pie__kind":"pie","pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"87c9f101-f3a1-4bdd-a4f4-0943e25242b3","title":"Most Popular Microsoft Repos","visualType":"bar","pageId":"e7ae717e-d60d-413c-b646-e5aced98afd7","layout":{"x":0,"y":13,"width":9,"height":7},"query":{"kind":"inline","usedVariables":["_endTime","_startTime"],"text":"EventsFromLiveStream\n| where CreatedAt between (_startTime .. _endTime)\n| where Repo.name has 'Microsoft'\n| summarize TotalEvents = count() by RepoName=tostring(Repo.name)\n| top 5 by TotalEvents; \n","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"hideLegend":false,"xColumnTitle":"","verticalLine":"","xAxisScale":"linear","crossFilterDisabled":true,"hideTileTitle":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"64cfaa7a-7da9-41f0-bfd6-ab18721a8782","title":"Trend-Top 2 MS Repos","visualType":"line","pageId":"e7ae717e-d60d-413c-b646-e5aced98afd7","layout":{"x":9,"y":13,"width":15,"height":7},"query":{"kind":"inline","usedVariables":["_endTime","_startTime"],"text":"let repos=EventsFromLiveStream\n| where CreatedAt between (_startTime .. _endTime)\n| where Repo.name has 'Microsoft'\n| summarize TotalEvents = count() by RepoName=tostring(Repo.name)\n| top 2 by TotalEvents\n| project RepoName; \nEventsFromLiveStream\n| extend RepoName = tostring(Repo.name)\n| where RepoName in (repos)\n| make-series count() default=0 on CreatedAt in range(_startTime, _endTime, 1h) by RepoName\n| extend (rsquare, slope, variance, rvariance, interception, linefit) = series_fit_line(count_)\n| project RepoName, CreatedAt, linefit, count_ \n| render timechart ","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"hideLegend":false,"xColumnTitle":"","verticalLine":"","xAxisScale":"linear","crossFilterDisabled":true,"hideTileTitle":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"5f5df02c-126e-4062-9969-b99756605505","title":"Users this Year","visualType":"line","pageId":"0374ab74-f300-493b-9d15-1199797675a4","layout":{"x":0,"y":0,"width":11,"height":6},"query":{"kind":"inline","usedVariables":[],"text":"let start = startofyear(now()); \nlet end = now();\nlet window = 7d; \nEventsFromLiveStream\n| extend UserId = hash(tostring(Actor.login))\n| evaluate activity_counts_metrics(UserId, CreatedAt, start, end, window)\n| project CreatedAt, DistinctUsers = dcount, NewDistinctUsers = new_dcount   \n| render timechart with (title = \"Distinct Users Weekly\")","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"hideLegend":false,"xColumnTitle":"","verticalLine":"","xAxisScale":"linear","crossFilterDisabled":true,"hideTileTitle":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"7b81bf22-5dfc-483c-9cb8-bd9a7497df27","title":"New Users Language of Choice this Year","visualType":"line","pageId":"0374ab74-f300-493b-9d15-1199797675a4","layout":{"x":11,"y":0,"width":12,"height":6},"query":{"kind":"inline","usedVariables":[],"text":"let start = startofyear(now()); \nlet end = now();\nlet window = 7d; \nEventsFromLiveStream\n| where CreatedAt between(start .. end)\n| extend UserId = hash(tostring(Actor.login))\n| where Payload.pull_request.head.repo.language in (\"Python\", \"R\", \"Matlab\")\n| where Type == 'PullRequestEvent'\n| extend Language = tostring(Payload.pull_request.head.repo.language)\n| evaluate activity_counts_metrics(UserId, CreatedAt, start, end, window, Language)\n| project CreatedAt, Language, NewUsersDcount = new_dcount\n| render timechart with (title = \"Distinct _New_ Users Weekly by Language\")","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"hideLegend":false,"xColumnTitle":"","verticalLine":"","xAxisScale":"linear","crossFilterDisabled":true,"hideTileTitle":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"cf920198-b975-492a-98ab-e27421c4f6d5","title":"Active User Trend (3 logins per 10 days)","visualType":"line","pageId":"0374ab74-f300-493b-9d15-1199797675a4","layout":{"x":0,"y":6,"width":11,"height":7},"query":{"kind":"inline","usedVariables":[],"text":"let start = startofyear(now()); \nlet end = now();\nlet activityPeriod = 1d;        \nlet numActivePeriods = 3; \nlet lookbackWindow = 10d;\nlet reportWindow = 30d;\nEventsFromLiveStream\n| where CreatedAt between(start .. end)\n| where Payload.pull_request.head.repo.language in (\"Python\")\n| extend UserId = hash(tostring(Actor.login))\n| evaluate active_users_count(UserId, CreatedAt, start, end, lookbackWindow, activityPeriod, numActivePeriods, reportWindow) \n| render timechart with (title = \"Distinct Active Users Monthly\") ","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"hideLegend":false,"xColumnTitle":"","verticalLine":"","xAxisScale":"linear","crossFilterDisabled":true,"hideTileTitle":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"7a2822d1-6bf4-4191-b24c-aede92874c4d","title":"Week over Week Retention Rate Per Language type","visualType":"line","pageId":"0374ab74-f300-493b-9d15-1199797675a4","layout":{"x":11,"y":6,"width":12,"height":7},"query":{"kind":"inline","usedVariables":[],"text":"// Weeklky Churn / Retention\nlet start = startofyear(now()); \nlet end = now();\n// Custom classification of languages\nlet languageClass = dynamic({\n        \"C#\":         \"Managed\",\n        \"Python\":     \"ML\",\n        \"R\":          \"ML\",\n        \"TypeScript\": \"Script\"\n    });\nEventsFromLiveStream\n| where CreatedAt between(start .. end)\n| where Payload.pull_request.head.repo.language in (bag_keys(languageClass))\n| extend Language = tostring(Payload.pull_request.head.repo.language)\n| extend LanguageClassification = tostring(languageClass[Language]), UserId = hash(tostring(Actor.login))\n| evaluate activity_metrics(UserId, CreatedAt, start, end, 7d, LanguageClassification)\n| project CreatedAt, LanguageClassification, RetentionRate = retention_rate * 100\n| where CreatedAt > start\n| render timechart with(title = \"Week over Week Retention Rate Per Language type\")","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"hideLegend":false,"xColumnTitle":"","verticalLine":"","xAxisScale":"linear","crossFilterDisabled":true,"hideTileTitle":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"44bf2eaa-c247-4a65-a924-a39f41798cd2","title":"Daily Deployments","visualType":"column","pageId":"6c78f19c-4376-4055-bff3-cc29b7e33968","layout":{"x":0,"y":3,"width":9,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"},"usedVariables":["_endTime","_startTime"],"text":"// Count of Release events in a time frame\nEventsFromLiveStream\n| where CreatedAt between (_startTime .. _endTime)\n| where Type == \"ReleaseEvent\" \n| summarize DailyDeploymentCount=count()  by bin(CreatedAt, 1d)\n"},"visualOptions":{"hideTileTitle":false,"hideLegend":true,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"779a6b94-4c68-44f7-b773-49535d9855fe","title":"Deployment Frequency","visualType":"card","pageId":"6c78f19c-4376-4055-bff3-cc29b7e33968","layout":{"x":9,"y":3,"width":6,"height":3},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"},"usedVariables":[],"text":"   let _enddatetime    = todatetime(toscalar(EventsFromLiveStream | summarize max(bin(CreatedAt,1d))));\n   let _startdatetime  =startofmonth(datetime_add('month',-3,_enddatetime));\n   let _windowtime     = 1d;\n//Creating Date Table for last 3 months from latest date\n\tlet last_3_months_days=range x from _startdatetime to _enddatetime step _windowtime\n\t| extend day = format_datetime(x,'yyyy-MM-dd HH:mm')\n\t| project todatetime(day)\n    | sort by day asc;\n//Join dates between days table and release table.\n    let JoinedData=materialize(last_3_months_days\n    | join kind =leftouter (EventsFromLiveStream | where Type == \"ReleaseEvent\" |  extend day= bin(CreatedAt,1d)) on day);\n// Count how many days deployments happened - Ex:Atleast 3 days in a week\n    let Daily_deploy_check=JoinedData\n    | summarize days_deployed=dcount(day1) by day=bin(day,7d);\n    let Monthly_deploy_check=JoinedData\n    | summarize months_deployed=dcount(day1) by month=bin(day,30d);\n// Join all daily, weelkly and monthly dataset on a rounded of month datetime value.\n// check if conditions, days_deployed>=3, weeks_deployed>=1, months_deployed>=1 or yearly\n    Daily_deploy_check\n    | extend month= bin(day,30d)\n    | join kind=inner (Monthly_deploy_check ) on month\n    | summarize case(percentile(days_deployed,50)>=3, \"daily\", percentile(days_deployed,50)>=1,\"weekly\",percentile(months_deployed,50)>=1,\"monthly\",\"yearly\")\n"},"visualOptions":{"hideTileTitle":false,"multiStat__textSize":"auto","multiStat__valueColumn":{"type":"infer"},"colorRulesDisabled":false,"colorRules":[{"id":"0127fa5c-1543-4c69-826f-22ae4ed49f0b","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":"Column1","color":"green","tag":"","icon":null,"conditions":[{"column":"Column1","operator":"==","values":["daily"]}],"visualType":"stat"},{"id":"b69a35e4-7761-4c7d-bb87-c30ac2df913d","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"green","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["weekly"]}],"visualType":"stat"},{"id":"679a2b67-7ca4-4238-ad55-d57e40f7d3f8","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"yellow","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["monthly"]}],"visualType":"stat"},{"id":"61f365fa-beb5-484c-927c-5188ecf92459","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"red","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["yearly"]}],"visualType":"stat"}],"pie__TopNSlices":null}},{"id":"9850b4eb-3234-43ae-829c-94dd37e20264","title":"Daily Median Time to Restore","visualType":"line","pageId":"6c78f19c-4376-4055-bff3-cc29b7e33968","layout":{"x":15,"y":3,"width":9,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"},"usedVariables":["_endTime","_startTime"],"text":"// Time difference between issue opened and issue closed \n  IssuesEvent\n  | where CreatedAt  between (_startTime .. _endTime)\n  | where issue_state == \"closed\"\n  | extend timediff= datetime_diff('HOUR',issue_closed_at,issue_created_at)\n  | summarize MedianRestorationTime=percentile(timediff,50) by bin(CreatedAt,1d)"},"visualOptions":{"hideTileTitle":false,"hideLegend":true,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"4746bb8d-8748-44fd-b22a-8d553cdbd37c","title":"Time to Restore","visualType":"card","pageId":"6c78f19c-4376-4055-bff3-cc29b7e33968","layout":{"x":9,"y":6,"width":6,"height":3},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"},"usedVariables":[],"text":"let _enddatetime    = todatetime(toscalar(IssuesEvent | summarize max(bin(CreatedAt,1d))));\nlet _startdatetime  =datetime_add('month',-3,_enddatetime);\n// Time difference between issue created datetime and issue closed datetime\nIssuesEvent\n  | where issue_state == \"closed\" and CreatedAt between (_startdatetime .. _enddatetime)\n  | extend timediff= datetime_diff('HOUR',issue_closed_at,issue_created_at)\n  | summarize MedianRestorationTime=percentile(timediff,50) by bin(CreatedAt,90d)\n  | project CreatedAt,RestorationTime=case(MedianRestorationTime<24, \"One day\",MedianRestorationTime<168,\"One week\",MedianRestorationTime<730,\"One month\", MedianRestorationTime<730*6,\"Six months\",\"One year\")\n  | top 1 by CreatedAt asc \n  | project RestorationTime"},"visualOptions":{"hideTileTitle":false,"multiStat__textSize":"auto","multiStat__valueColumn":{"type":"infer"},"colorRulesDisabled":false,"colorRules":[{"id":"e74e6ba2-13f7-47c7-8bd6-9d1c67e539db","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"green","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["One day"]}],"visualType":"stat"},{"id":"1180c1b7-2d18-4657-98c4-28575f6eaabf","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"green","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["One week"]}],"visualType":"stat"},{"id":"e9a1b612-8e43-4395-b2ea-08379dc68a1f","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"yellow","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["One month"]}],"visualType":"stat"},{"id":"77635942-3f09-42dd-8087-529115b7223d","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"red","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["One year"]}],"visualType":"stat"}],"pie__TopNSlices":null}},{"id":"16f5bcab-43f8-43d7-93d5-92a04acf303b","title":"Daily Median Lead Time to Change","visualType":"line","pageId":"6c78f19c-4376-4055-bff3-cc29b7e33968","layout":{"x":0,"y":10,"width":9,"height":7},"query":{"kind":"inline","usedVariables":["_endTime","_startTime"],"text":"// All the latest commit Events by Repo\nlet Commits=EventsFromLiveStream\n| where Type == \"PushEvent\"\n| where CreatedAt between (_startTime .. _endTime)\n| extend RepoId=tostring(Repo.id)\n| project RepoId, CreatedAt\n|summarize max(CreatedAt) by RepoId;\n//All the latest Release/Deploy Events by Repo\nlet Deploys=EventsFromLiveStream\n| where Type == \"ReleaseEvent\"\n| where CreatedAt between (_startTime .. _endTime)\n| extend RepoId= tostring(Repo.id), PublishedAt=todatetime(Payload.release.published_at)\n| project RepoId,PublishedAt \n| summarize max(PublishedAt) by RepoId;\n//Join by RepoId and get median of Timediff between publish time and commit create time\nCommits\n| join kind = inner Deploys on $left.RepoId==$right.RepoId\n| extend Timediff = datetime_diff('hour',max_PublishedAt, max_CreatedAt)\n//Remove if the data is corrected. In Existing data, For a given repo, there are records where commit created time is after the last release time\n| where Timediff >1\n| summarize MedianLeadTimetoChange=percentile(Timediff, 50) by bin(max_PublishedAt,1d)","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"}},"visualOptions":{"hideTileTitle":false,"hideLegend":true,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"de3163da-3d86-4da2-9a44-9ff5b447c277","title":"Lead Time to Change","visualType":"card","pageId":"6c78f19c-4376-4055-bff3-cc29b7e33968","layout":{"x":9,"y":9,"width":6,"height":3},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"},"usedVariables":[],"text":"let _enddatetime    = todatetime(toscalar(EventsFromLiveStream | summarize max(bin(CreatedAt,1d))));\nlet _startdatetime  =startofmonth(datetime_add('month',-3,_enddatetime));\n// All the latest commit Events by Repo\nlet Commits=EventsFromLiveStream\n| where Type == \"PushEvent\"\n| where CreatedAt between (_startdatetime .. _enddatetime)\n| extend RepoId=tostring(Repo.id)\n| project RepoId, CreatedAt\n|summarize max(CreatedAt) by RepoId;\n//All the latest Release/Deploy Events by Repo\nlet Deploys=EventsFromLiveStream\n| where Type == \"ReleaseEvent\"\n| where CreatedAt between (_startdatetime .. _enddatetime)\n| extend RepoId= tostring(Repo.id), PublishedAt=todatetime(Payload.release.published_at)\n| project RepoId,PublishedAt \n| summarize max(PublishedAt) by RepoId;\n//Join by RepoId and get median of Timediff between publish time and commit create time\nlet MedianLeadTimetoChange=Commits\n| join kind = inner Deploys on $left.RepoId==$right.RepoId\n| extend Timediff = datetime_diff('hour',max_PublishedAt, max_CreatedAt)\n//Remove if the data is corrected. In Existing data, For a given repo, there are records where commit created time is after the last release time\n| where Timediff >1\n| summarize MedianLeadTimetoChange=percentile(Timediff, 50) by bin(max_PublishedAt,90d);\nMedianLeadTimetoChange\n| extend OverallLeadTimetoChange= case(MedianLeadTimetoChange<2,\"One hour\",MedianLeadTimetoChange<=24, \"One day\", MedianLeadTimetoChange<=168, \"One week\",MedianLeadTimetoChange<= 730, \"One month\", MedianLeadTimetoChange<= 730*6, \"Six months\",\"One year\")\n| top 1 by max_PublishedAt desc\n| project OverallLeadTimetoChange"},"visualOptions":{"hideTileTitle":false,"multiStat__textSize":"auto","multiStat__valueColumn":{"type":"infer"},"colorRulesDisabled":false,"colorRules":[{"id":"e5ee25a1-514f-42d3-a84f-98c369a90ba9","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"green","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["One hour"]}],"visualType":"stat"},{"id":"db21efc2-f677-4b27-8973-71ec14f8b9e5","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"green","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["One day"]}],"visualType":"stat"},{"id":"2c8da229-8a0e-4038-8d74-e816a01030e2","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"green","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["One week"]}],"visualType":"stat"},{"id":"9fec2afe-8afb-45cc-ad64-83c5d8dc5622","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"yellow","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["One month"]}],"visualType":"stat"},{"id":"d2ece492-e3ce-4bce-ac21-32f016fd46b6","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"red","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["Six months"]}],"visualType":"stat"},{"id":"c6f1e24f-6e0c-4efe-ad2f-2e125e5630b0","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"red","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["One year"]}],"visualType":"stat"}],"pie__TopNSlices":null}},{"id":"6ad74943-84c5-471f-b58e-9f508e1cb735","title":" ","visualType":"markdownCard","pageId":"6c78f19c-4376-4055-bff3-cc29b7e33968","layout":{"x":0,"y":17,"width":24,"height":5},"query":{"kind":"inline","usedVariables":[],"text":"# Key metrics\nThis Four Keys project defines the key metrics as follows:\n## Deployment Frequency\n**Definition:** How frequently a team successfully releases to production, e.g., daily, weekly, monthly, yearly.\n\n**Calculation:** Count of published releases by taking daily, weekly, monthly and yealy bins of release_published_at \n## Lead Time for Changes\n**Definition:** The median amount of time for a commit to be deployed into production.\n\n**Calculation:** Take the difference between max of commit datetime of a repo and the Release publish datetime is.\n## Time to Restore Services\n**Definition:** For a failure, the median amount of time between the deployment which caused the failure and the remediation. The remediation is measured by closing an associated bug / incident report.\n\n**Calculation:** Time difference between issue created datetime and issue closed datetime\n## Change Failure Rate\n**Definition:** The number of failures per the number of deployments. For example, if there are four deployments in a day and one causes a failure, that is a 25% change failure rate.\n\n**Calculation:** Take Ratio of Issues raised after a max Release datetime of repos"},"visualOptions":{"pie__TopNSlices":null}},{"id":"7f9b79ab-4fbb-480a-b071-b7aa85a3ec3c","title":"Change Failure Rate","visualType":"line","pageId":"6c78f19c-4376-4055-bff3-cc29b7e33968","layout":{"x":15,"y":10,"width":9,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"},"usedVariables":["_endTime","_startTime"],"text":"// Get max release dates by repo\nlet _ReleaseEvents = ReleaseEvent\n| where CreatedAt between (_startTime .. _endTime)\n| summarize max(release_published_at) by repo_id;\n// Get all issues created after release were published by repo\nIssuesEvent\n| where CreatedAt between (_startTime .. _endTime)\n| summarize max(issue_created_at) by repo_id\n| join hint.shufflekey=repo_id kind=rightouter _ReleaseEvents on repo_id\n//| where max_issue_created_at > max_release_published_at\n| project repo_id1, max_release_published_at, max_issue_created_at\n| summarize Issues_after_Publish_Ratio=sum(case(isnotempty(max_issue_created_at),1,0))*1.00/dcount(repo_id1) by bin(max_release_published_at,1d)\n"},"visualOptions":{"hideTileTitle":false,"hideLegend":true,"xColumnTitle":"","xColumn":{"type":"infer"},"yColumns":{"type":"infer"},"seriesColumns":{"type":"infer"},"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"pie__TopNSlices":null,"crossFilter":[],"drillthrough":[]}},{"id":"4045f8b6-21cf-4dce-83c7-5ca27a37a8aa","title":"Change Failure Ratio","visualType":"card","pageId":"6c78f19c-4376-4055-bff3-cc29b7e33968","layout":{"x":9,"y":12,"width":6,"height":3},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc"},"usedVariables":[],"text":"let _enddatetime    = todatetime(toscalar(EventsFromLiveStream | summarize max(bin(CreatedAt,1d))));\nlet _startdatetime  =datetime_add('month',-3,_enddatetime);\n// Get max release dates by repo\nlet _ReleaseEvents = ReleaseEvent\n| where CreatedAt between (_startdatetime .. _enddatetime)\n| summarize max(release_published_at) by repo_id;\n// Get all issues created by repo\nlet _latestIssues=EventsFromLiveStream\n| where Type==\"IssuesEvent\"\n| where CreatedAt between (_startdatetime .. _enddatetime)\n| extend repo_id=tostring(Repo.id), issue_created_at=todatetime(Payload.issue.created_at)\n| summarize max(issue_created_at) by repo_id;\n// Join Releases and Issues by Repo and check Ratio of Sum of issues by Count of repos\n_latestIssues\n| join hint.shufflekey=repo_id kind=rightouter _ReleaseEvents on repo_id\n| where max_issue_created_at > max_release_published_at\n| project repo_id1, max_release_published_at, max_issue_created_at\n| summarize Issues_after_Publish_Ratio=sum(case(isnotempty(max_issue_created_at),1,0))*100.00/dcount(repo_id1)\n| extend OverallRatio=case(Issues_after_Publish_Ratio<=15, \"0-15%\",Issues_after_Publish_Ratio<46, \"16-45%\",Issues_after_Publish_Ratio<100,\"46-100%\", \"More than 100%\")\n| project OverallRatio"},"visualOptions":{"hideTileTitle":false,"multiStat__textSize":"auto","multiStat__valueColumn":{"type":"infer"},"colorRulesDisabled":false,"colorRules":[{"id":"f7048dc7-b88f-4a04-9b19-4951496a8911","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"green","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["0-15%"]}],"visualType":"stat"},{"id":"a3f42afd-0312-4d8e-8b42-3a0458adc7e8","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"yellow","tag":"","icon":null,"conditions":[{"column":null,"operator":">","values":["16-45%"]}],"visualType":"stat"},{"id":"ca3dd679-8c48-41fc-8171-5da356bca643","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"red","tag":"","icon":null,"conditions":[{"column":null,"operator":">","values":["46-100%"]}],"visualType":"stat"},{"id":"d804c2af-6233-45b8-9f23-9d243f9af728","ruleType":"colorByCondition","ruleName":"","applyTo":"cells","chainingOperator":"and","colorStyle":"bold","hideText":false,"applyToColumn":null,"color":"red","tag":"","icon":null,"conditions":[{"column":null,"operator":"==","values":["More than 100%"]}],"visualType":"stat"}],"pie__TopNSlices":null}},{"id":"e919f3a0-1d55-4039-91db-8ec1cdb980d8","title":" ","visualType":"markdownCard","pageId":"6c78f19c-4376-4055-bff3-cc29b7e33968","layout":{"x":0,"y":0,"width":24,"height":3},"query":{"kind":"inline","usedVariables":[],"text":"# DORA Four Keys  :\n## KPIs to caculate performance of software delivery \n"},"visualOptions":{"pie__TopNSlices":null}}],"parameters":[{"kind":"duration","id":"a94e79b9-aae0-457b-8c81-4b188327111c","displayName":"TimeRange","beginVariableName":"_startTime","endVariableName":"_endTime","defaultValue":{"kind":"dynamic","count":7,"unit":"days"},"showOnPages":{"kind":"selection","pageIds":["6c78f19c-4376-4055-bff3-cc29b7e33968"]}}],"dataSources":[{"id":"1a003d3e-c7a8-49f1-8d8e-68acda495ddc","name":"GitHub","clusterUri":"https://demo11.westus.kusto.windows.net/","database":"GitHub","kind":"manual-kusto","scopeId":"kusto"}],"pages":[{"name":"Repo Analytics","id":"e7ae717e-d60d-413c-b646-e5aced98afd7"},{"name":"User Analytics","id":"0374ab74-f300-493b-9d15-1199797675a4"},{"name":"DORA KPI","id":"6c78f19c-4376-4055-bff3-cc29b7e33968"}]}